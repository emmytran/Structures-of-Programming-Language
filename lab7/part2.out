[local ["GateMaker","AndG","OrG","NotG","A","B","S","IntToNeed","Out","MulPlex"] [GateMaker = proc {$ F EXU1} [EXU1 = proc {$ Xs Ys EXU2} [local ["T"] [local ["GateLoop"] [GateLoop = proc {$ Xs Ys EXU3} [case Xs of nil() then [EXU3 = nil()] else [case Xs of '|'(1:X 2:Xr) then [case Ys of nil() then [EXU3 = nil()] else [case Ys of '|'(1:Y 2:Yr) then [local ["EXU4","EXU5"] [local ["EXU6","EXU7"] [EXU6 = X,EXU7 = Y,"F" "EXU6" "EXU7" "EXU4"],local ["EXU6","EXU7"] [EXU6 = Xr,EXU7 = Yr,"GateLoop" "EXU6" "EXU7" "EXU5"],EXU3 = '|'(1:EXU4 2:EXU5)]] else [skip]]] else [skip]]],thread [local ["X"] [local ["EXU3","EXU4"] [EXU3 = Xs,EXU4 = Ys,"GateLoop" "EXU3" "EXU4" "X"],T = X]],EXU2 = T]]]],NotG = proc {$ Xs EXU1} [local ["T"] [local ["Loop"] [Loop = proc {$ Xs EXU2} [case Xs of nil() then [EXU2 = nil()] else [case Xs of '|'(1:X 2:Xr) then [local ["EXU3","EXU4"] [local ["EXU5","EXU6"] [EXU5 = 1,local ["EXU8","EXU9"] [EXU8 = X,EXU9 = -1,"IntMultiply" "EXU8" "EXU9" "EXU6"],"IntPlus" "EXU5" "EXU6" "EXU3"],local ["EXU5"] [EXU5 = Xr,"Loop" "EXU5" "EXU4"],EXU2 = '|'(1:EXU3 2:EXU4)]] else [skip]]],thread [local ["X"] [local ["EXU2"] [EXU2 = Xs,"Loop" "EXU2" "X"],T = X]],EXU1 = T]]],local ["EXU1"] [EXU1 = proc {$ Xs Ys EXU2} [local ["O"] [local ["EXU3"] [local ["EXU4","EXU5"] [EXU4 = Xs,EXU5 = 0,"Eq" "EXU4" "EXU5" "EXU3"],if EXU3 then [O = 0] else [local ["EXU3","EXU4"] [EXU3 = Xs,EXU4 = Ys,"IntMultiply" "EXU3" "EXU4" "O"]]],EXU2 = O]],"GateMaker" "EXU1" "AndG"],local ["EXU1"] [EXU1 = proc {$ Xs Ys EXU2} [local ["O"] [local ["EXU3"] [local ["EXU4","EXU5"] [EXU4 = Xs,EXU5 = 1,"Eq" "EXU4" "EXU5" "EXU3"],if EXU3 then [O = 1] else [local ["EXU3","EXU4"] [EXU3 = Xs,EXU4 = Ys,"IntPlus" "EXU3" "EXU4" "O"]]],EXU2 = O]],"GateMaker" "EXU1" "OrG"],IntToNeed = proc {$ Xs EXU1} [local ["Loop","O"] [Loop = proc {$ Xs EXU2} [case Xs of nil() then [EXU2 = nil()] else [case Xs of '|'(1:X 2:Xr) then [local ["O"] [local ["BNU3"] [BNU3 = proc {$ EXU4} [EXU4 = X],{ByNeed BNU3 O}],local ["EXU3","EXU4"] [EXU3 = O,local ["EXU5"] [EXU5 = Xr,"Loop" "EXU5" "EXU4"],EXU2 = '|'(1:EXU3 2:EXU4)]]] else [skip]]],local ["EXU2"] [EXU2 = Xs,"Loop" "EXU2" "O"],EXU1 = O]],MulPlex = proc {$ A B S EXU1} [local ["And1","And2","Not","Or"] [local ["EXU2","EXU3"] [EXU2 = S,EXU3 = B,"AndG" "EXU2" "EXU3" "And1"],local ["EXU2"] [EXU2 = S,"NotG" "EXU2" "Not"],local ["EXU2","EXU3"] [EXU2 = Not,EXU3 = A,"AndG" "EXU2" "EXU3" "And2"],local ["EXU2","EXU3"] [EXU2 = And1,EXU3 = And2,"OrG" "EXU2" "EXU3" "Or"],EXU1 = Or]],local ["EXU1"] [local ["EXU2","EXU3","EXU4","EXU5","EXU6","EXU7"] [EXU2 = 0,EXU3 = 1,EXU4 = 1,EXU5 = 0,EXU6 = 0,EXU7 = 1,local ["EXU8","EXU9"] [EXU8 = EXU2,local ["EXU10","EXU11"] [EXU10 = EXU3,local ["EXU12","EXU13"] [EXU12 = EXU4,local ["EXU14","EXU15"] [EXU14 = EXU5,local ["EXU16","EXU17"] [EXU16 = EXU6,local ["EXU18","EXU19"] [EXU18 = EXU7,EXU19 = nil(),EXU17 = '|'(1:EXU18 2:EXU19)],EXU15 = '|'(1:EXU16 2:EXU17)],EXU13 = '|'(1:EXU14 2:EXU15)],EXU11 = '|'(1:EXU12 2:EXU13)],EXU9 = '|'(1:EXU10 2:EXU11)],EXU1 = '|'(1:EXU8 2:EXU9)]],"IntToNeed" "EXU1" "A"],local ["EXU1"] [local ["EXU2","EXU3","EXU4","EXU5","EXU6","EXU7"] [EXU2 = 1,EXU3 = 1,EXU4 = 1,EXU5 = 0,EXU6 = 1,EXU7 = 0,local ["EXU8","EXU9"] [EXU8 = EXU2,local ["EXU10","EXU11"] [EXU10 = EXU3,local ["EXU12","EXU13"] [EXU12 = EXU4,local ["EXU14","EXU15"] [EXU14 = EXU5,local ["EXU16","EXU17"] [EXU16 = EXU6,local ["EXU18","EXU19"] [EXU18 = EXU7,EXU19 = nil(),EXU17 = '|'(1:EXU18 2:EXU19)],EXU15 = '|'(1:EXU16 2:EXU17)],EXU13 = '|'(1:EXU14 2:EXU15)],EXU11 = '|'(1:EXU12 2:EXU13)],EXU9 = '|'(1:EXU10 2:EXU11)],EXU1 = '|'(1:EXU8 2:EXU9)]],"IntToNeed" "EXU1" "B"],local ["EXU1","EXU2","EXU3","EXU4","EXU5","EXU6"] [EXU1 = 1,EXU2 = 0,EXU3 = 1,EXU4 = 0,EXU5 = 1,EXU6 = 1,local ["EXU7","EXU8"] [EXU7 = EXU1,local ["EXU9","EXU10"] [EXU9 = EXU2,local ["EXU11","EXU12"] [EXU11 = EXU3,local ["EXU13","EXU14"] [EXU13 = EXU4,local ["EXU15","EXU16"] [EXU15 = EXU5,local ["EXU17","EXU18"] [EXU17 = EXU6,EXU18 = nil(),EXU16 = '|'(1:EXU17 2:EXU18)],EXU14 = '|'(1:EXU15 2:EXU16)],EXU12 = '|'(1:EXU13 2:EXU14)],EXU10 = '|'(1:EXU11 2:EXU12)],EXU8 = '|'(1:EXU9 2:EXU10)],S = '|'(1:EXU7 2:EXU8)]],local ["EXU1","EXU2","EXU3"] [EXU1 = A,EXU2 = B,EXU3 = S,"MulPlex" "EXU1" "EXU2" "EXU3" "Out"],local ["Loop"] [Loop = proc {$ X} [local ["EXU1"] [local ["EXU2","EXU3"] [EXU2 = X,EXU3 = 0,"Eq" "EXU2" "EXU3" "EXU1"],if EXU1 then [skip] else [local ["EXU1"] [local ["EXU2","EXU3"] [EXU2 = X,EXU3 = 1,"IntMinus" "EXU2" "EXU3" "EXU1"],"Loop" "EXU1"]]]],local ["EXU1"] [EXU1 = 1000,"Loop" "EXU1"]],skip/BOut]]